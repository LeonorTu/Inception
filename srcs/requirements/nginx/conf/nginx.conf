# Run NGINX as the www-data user for security (not as root)
# This matches the WordPress file permissions model
user www-data;

# Event handling configuration for worker processes
events
{
    # Maximum number of simultaneous connections per worker process
    # 1024 is a good default for most server configurations
    worker_connections 1024;
}

# HTTP server configuration block
http
{
    # Include the file that maps file extensions to MIME types
    # This ensures files are served with the correct Content-Type headers
    include /etc/nginx/mime.types;

    # HTTP (port 80) server block that redirects all traffic to HTTPS
    server
    {
        # Listen on both IPv4 and IPv6 interfaces
        listen 80;
        listen [::]:80;

        # WARNING: This is a different domain from your SSL certificate domain
        # Should be changed to jtu.42.fr to match your certificate
        server_name tmenkovi.42.fr;

        # Redirect all HTTP requests to HTTPS with 301 (permanent) redirect
        # $host and $request_uri preserve the original domain and path
        return 301 https://$host$request_uri;
    }

    # HTTPS (port 443) server block for secure connections
    server
    {
        # Listen on port 443 with SSL enabled for both IPv4 and IPv6
        listen 443 ssl;
        listen [::]:443 ssl;

        # Define the server name that matches the certificate CN field
        server_name jtu.42.fr;

        # SSL/TLS Configuration
        # Only use secure TLS versions (no SSL v3, TLS v1.0, or v1.1)
        ssl_protocols TLSv1.2 TLSv1.3;

        # Paths to the self-signed certificate and private key
        ssl_certificate /etc/nginx/ssl/public_certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;

        # Document root for WordPress files
        # Maps to the WordPress volume in docker-compose.yml
        root /var/www/html;

        # Default files to serve when a directory is requested
        index index.php index.html;

        # PHP Processing Configuration
        # Match all .php files and process them through FastCGI
        location ~ \.php$
        {
            # Include default FastCGI parameters
            include fastcgi_params;

            # Pass PHP requests to WordPress container on port 9000
            # The hostname 'wordpress' is resolved via Docker's internal DNS
            fastcgi_pass wordpress:9000;

            # Default index file for PHP processing
            fastcgi_index index.php;

            # Split the URI into script name and path info components
            # Enables clean URLs like /example/page/ to work with WordPress
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            # Set the script filename parameter for PHP-FPM
            # Tells PHP-FPM where to find the PHP file to execute
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

            # Pass the path info to PHP for proper routing
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }
}